<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lcxs.mapper.base.userBeanMapper" >
  <resultMap id="BaseResultMap" type="com.lcxs.model.base.userBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="vid" property="vid" jdbcType="BIGINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="owninvitation" property="owninvitation" jdbcType="VARCHAR" />
    <result column="invitation" property="invitation" jdbcType="VARCHAR" />
    <result column="alipay" property="alipay" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="kf" property="kf" jdbcType="VARCHAR" />
    <result column="ctime" property="ctime" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    id, vid, phone, password, owninvitation, invitation, alipay, realname, status, kf, 
    ctime, ip, level
  </sql>
  <!-- 根据vid查找用户的回单 -->
  <select id="findReceipt">
  		select * from c_receipt c INNER join 
 	(select m.rid as dd from c_user u INNER JOIN  c_user_receipt m on u.vid=m.vid where u.vid=#{vid}) t  
 	on c.rid=t.dd  
  </select>	
  <!-- 根据vid查找用户 -->
  <select id="findUser" parameterType="java.lang.Long">
  	select * from c_user where vid=#{vid}
  </select>	
  <!-- 根据电话号码查找用户 -->
  <select id="findUserByPhone" parameterType="java.lang.String" resultType="com.lcxs.model.base.userBean">
  	select * from c_user where phone=#{phone}
  </select>
  
  <!-- 根据回单查找客户 -->
  <select id="findUserByRid" parameterType="java.lang.Long" resultType="com.lcxs.model.base.userBean">
  	select * from c_user c inner join
  	(select t.vid as aa from c_user_receipt t where rid=#{rid}) m 
  	on c.vid=m.aa
  </select>
  <!-- 根据邀请码查找邀请该人的客户 -->
  <select id="findFriend">
  		select * from c_user where owninvitation=#{invitation}
  </select>
  <!-- 根据邀请码查找邀请该人的ts客户 -->
  <select id="findTsFriend">
  		select * from c_user where owninvitation=#{owninvitation} like 'T-%'
  </select>
  
  
  
  <!-- 显示用户信息 -->
  <select id="findAll" resultType="com.lcxs.model.base.userBean" >
  	select * from c_user 
  	<where>
  		status=1
  		<if test="keywords!=null">
  			and (vid like "%"#{keywords}"%" or phone like "%"#{keywords}"%" or realname like "%"#{keywords}"%" or alipay like "%"#{keywords}"%" or owninvitation like "%"#{keywords}"%" or invitation like "%"#{keywords}"%")
  		</if>
  	</where>
  	order by ctime desc
  </select>
  <!-- 查询用户总投资金额 -->
  <select id="findTotalMoney" resultType="java.lang.Object" parameterType="java.lang.Long" >
  select SUM(c.tmoney) from c_receipt c INNER JOIN 
  (select m.rid from c_user u INNER JOIN  c_user_receipt m on u.vid=m.vid where u.vid=#{vid,jdbcType=BIGINT}) t on c.rid=t.rid  where status=1 or status=4
  </select>
  <!-- 查询用户总返现方案金-->
  <select id="findTotalReturnAmount" resultType="java.lang.Object" parameterType="java.lang.Long" >
  select SUM(c.jmoney) from c_receipt c INNER JOIN 
  (select m.rid from c_user u INNER JOIN  c_user_receipt m on u.vid=m.vid where u.vid=#{vid,jdbcType=BIGINT}) t on c.rid=t.rid  where status=1 or status=4
  </select>
  <!-- 查询用户总返现红包金额 -->
  <select id="findTotalRedAmount" resultType="java.lang.Object" parameterType="java.lang.Long" >
  select SUM(c.redmoney) from c_receipt c INNER JOIN 
  (select m.rid from c_user u INNER JOIN  c_user_receipt m on u.vid=m.vid where u.vid=#{vid,jdbcType=BIGINT}) t on c.rid=t.rid  where status=1 or status=4
  </select>
  
  <!-- 查询用户总提现金额 -->
  <select id="findReadyAmount" resultType="java.lang.Object" parameterType="java.lang.Long" >
  select SUM(c.jmoney) from c_receipt c INNER JOIN 
  (select m.rid as dd from c_user u INNER JOIN  c_user_receipt m on u.vid=m.vid where u.vid=#{vid,jdbcType=BIGINT}) t on c.rid=t.dd  where status=4
  </select>
  <!-- 根据vid查询用户信息-->
  <select id="findUserByVid" resultMap="BaseResultMap" parameterType="java.lang.Long" >
  	select * from c_user where vid=#{vid} and status=1
  </select>
  <!-- 根据vid冻结用户 -->
  <update id="deleteUserByVid" parameterType="java.lang.Long" >
  update c_user set status=2 where vid=#{vid}
  </update>
  <!-- 根据vid修改用户信息 -->
  <update id="updateUserByVid" parameterType="com.lcxs.model.base.userBean">
  update c_user set realname=#{realname},invitation=#{invitation},alipay=#{alipay},kf=#{kf},phone=#{phone} where vid=#{vid}
  </update>
  <!-- 根据vid查询用户投资清单 -->
  <select id="findInvestment" parameterType="com.lcxs.utils.BaseConditionVO" resultType="com.lcxs.model.finance.receiptBean">
  	select * from c_receipt c INNER join 
 	(select m.rid as dd from c_user u INNER JOIN  c_user_receipt m on u.vid=m.vid where u.vid=#{keywordsauid}) t  
 	on c.rid=t.dd  
 		<if test="keywords!=null">
  			and  (productname like "%"#{keywords}"%" or shopname like "%"#{keywords}"%")
  		</if>
  </select>
  <!-- 根据vid查询用户已打款回单 -->
  <select id="findReadyInvestment" parameterType="com.lcxs.utils.BaseConditionVO" resultType="com.lcxs.model.finance.receiptBean">
  		select * from c_receipt c INNER join 
 	(select m.rid as dd from c_user u INNER JOIN  c_user_receipt m on u.vid=m.vid where u.vid=#{keywordsauid}) t  
 	on c.rid=t.dd 
 		<where>
 			<if test="keywordsstatus!=null">
 				status=#{keywordsstatus}
 			</if>
 		</where>	
  </select>
  <!-- 查询用户绑定的银行个数 -->
  <select id="findBankCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
  select count(*) from c_bank b inner join 
  (select m.bid from c_user u inner join c_user_bank m on u.vid=m.vid where u.vid=#{vid}) t
  on t.bid=b.id
  </select>
  <!-- 查找用户的好友个数 -->
  <select id="findFriendAll" parameterType="java.lang.Long" resultType="java.lang.Integer">
  select  count(*) from c_user u inner join c_user m on u.owninvitation=m.invitation where u.vid=#{vid}
  </select>
  <!-- 无参查找所有用户vid -->
  <select id="findAllInfo" resultType="java.lang.Long">
  	select vid from c_user where status=1
  </select>
  <!-- 查找用户的所有好友信息 -->
  <select id="findFriendInfo" parameterType="com.lcxs.utils.BaseConditionVO" resultType="com.lcxs.model.base.userBean">
  	select m.vid, m.realname ,m.phone,m.ctime 
  	 from c_user u inner join c_user m on u.owninvitation=m.invitation where u.vid=#{vid} 
  	 	<if test="keywords!=null">
  	 		and (m.phone like "%"#{keywords}"%" or m.realname like "%"#{keywords}"%")
  	 	</if>
  	 
  </select>
  <!-- 根据银行账号删除银行 -->
  <delete id="deleteBank" parameterType="java.lang.Long">
  		delete from c_bank where id=#{id}
  </delete>
  <delete id="deleteBankM" parameterType="java.lang.Long">
	delete from c_user_bank where bid=#{bid}
  </delete>
  <!-- 今日注册用户-->
  <select id="findTodayR" parameterType="com.lcxs.utils.BaseConditionVO" resultType="com.lcxs.model.base.userBean">
  	SELECT * FROM c_user WHERE TO_DAYS(NOW()) - TO_DAYS(ctime) = 0
  </select>
  <!-- 修改用户密码 -->
  <update id="changePwd" parameterType="com.lcxs.utils.BaseConditionVO">
  	update   c_user set password=#{keywords} where vid=#{keywordsauid}
  </update>
  <!-- 查询绑定的银行卡 -->
  <select id="findBankByVid" parameterType="com.lcxs.utils.BaseConditionVO" resultType="com.lcxs.model.base.bankBean">
  	select * from c_bank b INNER join 
  	(select m.bid from c_user u INNER JOIN c_user_bank m on u.vid=m.vid where u.vid=#{keywordsauid}) t 
  	on b.id=t.bid 
  	<where>
  		<if test="keywords!=null">
  			obank like "%"#{keywords}"%"
  		</if>
  	</where>
  </select>
  <update id="updateByPhone" parameterType="com.lcxs.model.base.userBean">
  	update c_user set kf=#{kf} where phone=#{phone} 
  </update>
  
  
  <select id="queryUserByInvitation" resultType="com.lcxs.model.base.userBean" parameterType="java.lang.String">
  	select
  	<include refid="Base_Column_List" />
    from c_user
    where owninvitation = #{owninvitation}
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from c_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    delete from c_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lcxs.model.base.userBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    insert into c_user (id, vid, phone, 
      password, owninvitation, invitation, 
      alipay, realname, status, 
      kf, ctime, ip, level
      )
    values (#{id,jdbcType=BIGINT}, #{vid,jdbcType=BIGINT}, #{phone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{owninvitation,jdbcType=VARCHAR}, #{invitation,jdbcType=VARCHAR}, 
      #{alipay,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{kf,jdbcType=VARCHAR}, #{ctime,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lcxs.model.base.userBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    insert into c_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="vid != null" >
        vid,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="owninvitation != null" >
        owninvitation,
      </if>
      <if test="invitation != null" >
        invitation,
      </if>
      <if test="alipay != null" >
        alipay,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="kf != null" >
        kf,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="level != null" >
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="vid != null" >
        #{vid,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="owninvitation != null" >
        #{owninvitation,jdbcType=VARCHAR},
      </if>
      <if test="invitation != null" >
        #{invitation,jdbcType=VARCHAR},
      </if>
      <if test="alipay != null" >
        #{alipay,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="kf != null" >
        #{kf,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lcxs.model.base.userBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    update c_user
    <set >
      <if test="vid != null" >
        vid = #{vid,jdbcType=BIGINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="owninvitation != null" >
        owninvitation = #{owninvitation,jdbcType=VARCHAR},
      </if>
      <if test="invitation != null" >
        invitation = #{invitation,jdbcType=VARCHAR},
      </if>
      <if test="alipay != null" >
        alipay = #{alipay,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="kf != null" >
        kf = #{kf,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lcxs.model.base.userBean" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 05 17:59:52 CST 2018.
    -->
    update c_user
    set vid = #{vid,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      owninvitation = #{owninvitation,jdbcType=VARCHAR},
      invitation = #{invitation,jdbcType=VARCHAR},
      alipay = #{alipay,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      kf = #{kf,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
 <select id="findTsFriendInfo" parameterType="com.lcxs.utils.BaseConditionVO" resultType="com.lcxs.model.base.userBean">
   select m.vid, m.realname ,m.phone,m.ctime, u.owninvitation
   from c_user u inner join c_user m on u.vid=m.vid where u.owninvitation like 'T-%' and u.vid=#{vid}
  	 	<if test="keywords!=null">
  	 		and (m.phone like "%"#{keywords}"%" or m.realname like "%"#{keywords}"%")
  	 	</if>
  	 
  </select>
  <select id="findTsFriendAll" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select  count(*) from c_user u inner join c_user m on u.vid=m.vid where u.owninvitation like 'T-%' and u.vid=#{vid}
  </select>

</mapper>